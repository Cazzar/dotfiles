<%

  #if File.exist?("#{ENV['HOME']}/.gitconfig")
  #  @username = `git config --global --get user.name`.chomp
  #  puts "Using old user.name: #{@username}"
  #  @email = `git config --global --get user.email`.chomp
  #  puts "Using old user.email: #{@email}"
  #else 

  gitconfig = File.exist?(ENV['HOME'] + "/.gitconfig")
  if gitconfig
    @username = `git config --global --get user.name`.chomp.strip
    puts "Using old user.name: #{@username}"
  end

  if !gitconfig or @username == nil or @username.empty?
    print("Your Name: ")
    STDOUT.flush
    @username = STDIN.gets.chomp
  end

  if gitconfig
    @email = `git config --global --get user.email`.chomp.strip
    puts "Using old email: #{@email}"
  end
  if !gitconfig or @email == nil or @email.empty?
    print("Your Email: ")
    STDOUT.flush
    @email = STDIN.gets.chomp
  end
%>[user]
  name = <%= @username %>
  email = <%= @email %>
[core]
  excludesfile = ~/.gitignore
  editor = vim
  eol = lf
  autocrlf = false
  compression = 9
  loosecompression = 1
[color]
  diff = auto
  status = auto
  branch = auto
[apply]
  whitespace = nowarn
[alias]
  ff = pull --ff-only
  ff-merge = merge --ff-only
  recommit = commit --amend
  workdir-or-cwd = !echo $PWD
  workdir = rev-parse --show-toplevel
  prune = fetch --all --prune
  in-develop = log master..develop --pretty='format:%s' --no-merges
  deploy = push origin HEAD:develop
  log-branch = log --no-merges --first-parent
  to-push = !git log `command git branch -a 2> /dev/null | grep \"^* \" | sed -e \"s/^\\* //\"` --branches --not --remotes --decorate --oneline
[push]
  default = upstream
[rebase]
  autosquash = true
<% if File.exist?('/usr/bin/bcompare') %>
[merge]
  tool = bc3
[branch]
  autosetuprebase = always
<% end %>
